# Generated by Django 3.1.5 on 2021-02-15 04:48

from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('addresses', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('body', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Contractor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_paper_hidden', models.BooleanField(default=False)),
                ('is_allowed', models.BooleanField(default=False)),
                ('group', models.PositiveSmallIntegerField(choices=[(0, '임대인(매도인)'), (1, '임차인(매수인)'), (2, '공인중개사')])),
            ],
        ),
        migrations.CreateModel(
            name='ExplanationSignature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.TextField()),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Paper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('land_category', models.PositiveSmallIntegerField(choices=[(7, '대'), (100, '기타')], default=7)),
                ('lot_area', models.FloatField(blank=True, default=0)),
                ('building_structure', models.CharField(blank=True, max_length=20)),
                ('building_category', models.PositiveSmallIntegerField(blank=True, choices=[(70, '제1종근린생활시설'), (71, '제2종근린생활시설'), (80, '단독주택'), (81, '아파트'), (100, '기타')], default=80)),
                ('building_area', models.FloatField(blank=True, default=0)),
                ('trade_category', models.PositiveSmallIntegerField(choices=[(0, '월세'), (1, '전세'), (2, '매매'), (3, '교환')], default=0)),
                ('down_payment', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('security_deposit', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('monthly_fee', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('maintenance_fee', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('options', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(0, '티비'), (1, '냉장고'), (2, '세탁기'), (3, '에어컨'), (4, '침대'), (5, '책상'), (6, '옷장'), (7, '신발장'), (8, '가스렌지'), (9, '전자렌지'), (10, '도어락'), (11, '비데'), (99, '추가물품')], max_length=28, null=True)),
                ('from_date', models.DateField()),
                ('to_date', models.DateField()),
                ('special_agreement', models.TextField(blank=True)),
                ('address', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paper', to='addresses.address')),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='PaperStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, '요청중'), (1, '작성중'), (2, '서명중'), (3, '완료')], default=1)),
            ],
        ),
        migrations.CreateModel(
            name='VerifyingExplanation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paper_categories', multiselectfield.db.fields.MultiSelectField(choices=[(0, '단독주택'), (1, '공동주택'), (2, '매매'), (3, '임대')], max_length=7)),
                ('explanation_evidences', multiselectfield.db.fields.MultiSelectField(choices=[(0, '등기권리증'), (1, '등기사항증명서'), (2, '토지대장'), (3, '건축물대장'), (4, '지적도'), (5, '임야도'), (6, '토지이용계획확인서'), (7, '기타')], max_length=15)),
                ('explanation_evidence_info', models.CharField(blank=True, max_length=100)),
                ('requesting_condition_info', models.CharField(blank=True, max_length=100)),
                ('land_area', models.FloatField()),
                ('ledger_land_category', models.PositiveSmallIntegerField(choices=[(7, '대')], default=7)),
                ('actual_land_category', models.PositiveSmallIntegerField(choices=[(7, '대')], default=7)),
                ('net_area', models.FloatField()),
                ('land_share', models.CharField(blank=True, max_length=40)),
                ('year_of_completion', models.SmallIntegerField()),
                ('ledger_building_category', models.PositiveSmallIntegerField(blank=True, choices=[(70, '제1종근린생활시설'), (71, '제2종근린생활시설'), (80, '단독주택'), (81, '아파트'), (100, '기타')], default=80)),
                ('actual_building_category', models.PositiveSmallIntegerField(blank=True, choices=[(70, '제1종근린생활시설'), (71, '제2종근린생활시설'), (80, '단독주택'), (81, '아파트'), (100, '기타')], default=80)),
                ('building_structure', models.CharField(max_length=40)),
                ('building_direction', models.CharField(max_length=40)),
                ('seismic_design', models.CharField(max_length=20)),
                ('seismic_capacity', models.CharField(max_length=20)),
                ('legal_status', models.BooleanField()),
                ('matters_of_violation', models.CharField(blank=True, max_length=100)),
                ('land_ownership', models.CharField(blank=True, max_length=200)),
                ('building_ownership', models.CharField(blank=True, max_length=200)),
                ('land_other', models.CharField(blank=True, max_length=200)),
                ('building_other', models.CharField(blank=True, max_length=200)),
                ('rental_housing_registration', models.PositiveSmallIntegerField(choices=[(0, '장기일반민간임대주택'), (1, '공공지원민간임대주택'), (2, '단기민간임대주택'), (3, '해당사항없음')])),
                ('use_area', models.CharField(blank=True, max_length=40)),
                ('use_district', models.CharField(blank=True, max_length=40)),
                ('use_zone', models.CharField(blank=True, max_length=40)),
                ('building_coverage_limit', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('floor_area_limit', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('planning_facilities', models.CharField(blank=True, max_length=40)),
                ('permission_report_zone', models.BooleanField(blank=True, null=True)),
                ('speculative_area', models.PositiveIntegerField(blank=True, choices=[(0, '토기투기지역'), (1, '주택투기지역'), (2, '투기과열지구')], null=True)),
                ('unit_planning_area_others', models.CharField(blank=True, max_length=40)),
                ('other_use_restriction', models.CharField(blank=True, max_length=40)),
                ('relative_with_roads', models.CharField(max_length=40)),
                ('is_paved_rode', models.BooleanField()),
                ('accessibility', models.BooleanField()),
                ('bus_stop', models.CharField(max_length=40)),
                ('bus_by_foot', models.BooleanField()),
                ('bus_required_time', models.PositiveSmallIntegerField()),
                ('subway_station', models.CharField(blank=True, max_length=40)),
                ('subway_by_foot', models.BooleanField(blank=True, null=True)),
                ('subway_required_time', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('parking_lot', models.PositiveSmallIntegerField(choices=[(0, '없음'), (1, '전용주차시설'), (2, '공동주차시설'), (3, '그밖의주차시설')])),
                ('parking_lot_info', models.CharField(blank=True, max_length=20)),
                ('elementary_school', models.CharField(max_length=40)),
                ('elementary_school_by_foot', models.BooleanField()),
                ('elementary_school_required_time', models.PositiveSmallIntegerField()),
                ('middle_school', models.CharField(max_length=40)),
                ('middle_school_by_foot', models.BooleanField()),
                ('middle_school_required_time', models.PositiveSmallIntegerField()),
                ('high_school', models.CharField(max_length=40)),
                ('high_school_by_foot', models.BooleanField()),
                ('high_school_required_time', models.PositiveSmallIntegerField()),
                ('department_store', models.CharField(max_length=40)),
                ('department_store_by_foot', models.BooleanField()),
                ('department_store_required_time', models.PositiveSmallIntegerField()),
                ('medical_center', models.CharField(max_length=40)),
                ('medical_center_by_foot', models.BooleanField()),
                ('medical_center_required_time', models.PositiveSmallIntegerField()),
                ('is_security_office', models.BooleanField()),
                ('management', models.PositiveSmallIntegerField(choices=[(0, '위탁관리'), (1, '자체관리'), (2, '그밖의유형')])),
                ('undesirable_facilities', models.BooleanField()),
                ('undesirable_facilities_info', models.CharField(blank=True, max_length=100)),
                ('expected_transaction_price', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('land_prcie_recorded', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('building_price_recorded', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('acquisition_tax', models.FloatField(blank=True, null=True)),
                ('special_tax', models.FloatField(blank=True, null=True)),
                ('local_education_tax', models.FloatField(blank=True, null=True)),
                ('water_damage_status', models.BooleanField()),
                ('water_damage_status_info', models.CharField(blank=True, max_length=40)),
                ('water_capacity_status', models.BooleanField()),
                ('water_capacity_status_info', models.CharField(blank=True, max_length=40)),
                ('electricity_supply_status', models.BooleanField()),
                ('electricity_supply_status_info', models.CharField(blank=True, max_length=40)),
                ('gas_supply_status', models.BooleanField()),
                ('gas_supply_status_info', models.CharField(blank=True, max_length=40)),
                ('is_fire_alarm_detector', models.BooleanField()),
                ('fire_alarm_detector_quantity', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('heating_supply_method', models.PositiveSmallIntegerField(choices=[(0, '중앙공급'), (1, '개별공급')])),
                ('heating_status', models.BooleanField()),
                ('heating_status_info', models.CharField(blank=True, max_length=40)),
                ('heating_type', models.PositiveSmallIntegerField(choices=[(0, '가스'), (1, '기름'), (2, '프로판가스'), (3, '연탄'), (4, '그밖의종류')])),
                ('heating_type_info', models.CharField(blank=True, max_length=40)),
                ('is_elevator', models.BooleanField()),
                ('elevator_status', models.BooleanField(blank=True, null=True)),
                ('drainage_status', models.BooleanField()),
                ('drainage_status_info', models.CharField(blank=True, max_length=40)),
                ('other_facilities', models.CharField(blank=True, max_length=100)),
                ('wall_crack_status', models.BooleanField()),
                ('wall_crack_status_info', models.CharField(blank=True, max_length=40)),
                ('water_leak_status', models.BooleanField()),
                ('water_leak_status_info', models.CharField(blank=True, max_length=40)),
                ('wall_paper_status', models.BooleanField(null=True)),
                ('wall_paper_status_info', models.CharField(blank=True, max_length=40)),
                ('sunshine_status', models.BooleanField(null=True)),
                ('sunshine_status_info', models.CharField(blank=True, max_length=40)),
                ('noise_status', models.BooleanField(null=True)),
                ('vibration', models.BooleanField(null=True)),
                ('comission', models.PositiveIntegerField()),
                ('actual_expenses', models.PositiveIntegerField(blank=True)),
                ('payment_period', models.CharField(blank=True, max_length=100)),
                ('calculation_info', models.TextField()),
                ('address', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='addresses.address')),
                ('paper', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='verifying_explanation', to='papers.paper')),
            ],
        ),
        migrations.CreateModel(
            name='Signature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.TextField()),
                ('contractor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='signature', to='papers.contractor')),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
    ]
