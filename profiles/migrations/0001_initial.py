# Generated by Django 3.1.5 on 2021-03-26 02:56

import django.db.models.deletion
import django.utils.timezone
import django_migration_linter as linter
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models

import profiles.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("addresses", "0001_initial"),
    ]

    operations = [
        linter.IgnoreMigration(),
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(blank=True, null=True, verbose_name="last login"),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                ("is_expert", models.BooleanField(default=False)),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "email",
                    models.EmailField(max_length=254, unique=True, verbose_name="email address"),
                ),
                ("name", models.CharField(max_length=150)),
                ("birthday", models.DateField(null=True)),
                ("bio", models.CharField(blank=True, max_length=240)),
                ("used_count", models.PositiveSmallIntegerField(blank=True, default=0)),
                ("ip_address", models.GenericIPAddressField(null=True)),
                ("average_response_time", models.FloatField(default=0)),
                ("response_rate", models.FloatField(default=0)),
                ("contract_success_rate", models.FloatField(default=0)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "ordering": ["-id"],
            },
            managers=[
                ("objects", profiles.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name="ExpertProfile",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("registration_number", models.CharField(max_length=45)),
                ("shop_name", models.CharField(max_length=100)),
                (
                    "registration_certificate",
                    models.ImageField(upload_to=profiles.models.get_file_path),
                ),
                ("agency_license", models.ImageField(upload_to=profiles.models.get_file_path)),
                ("stamp", models.ImageField(upload_to=profiles.models.get_file_path)),
                (
                    "status",
                    models.PositiveSmallIntegerField(
                        choices=[(0, "폐업"), (1, "요청"), (2, "승인"), (3, "거부")], default=1
                    ),
                ),
            ],
            options={
                "ordering": ["-id"],
            },
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "mobile_number",
                    phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None),
                ),
                (
                    "bank_name",
                    models.SmallIntegerField(
                        choices=[
                            (0, "은행명"),
                            (2, "산업은행"),
                            (32, "부산은행"),
                            (3, "기업은행"),
                            (34, "광주은행"),
                            (4, "국민은행"),
                            (35, "제주은행"),
                            (7, "수협"),
                            (37, "전북은행"),
                            (11, "농협은행"),
                            (39, "경남은행"),
                            (12, "지역농축협"),
                            (45, "새마을금고"),
                            (20, "우리은행"),
                            (48, "신용협동조합"),
                            (23, "SC제일은행"),
                            (50, "상호저축은행"),
                            (27, "한국씨티은행"),
                            (64, "산림조합"),
                            (81, "KEB하나은행"),
                            (71, "우체국"),
                            (88, "신한은행"),
                            (89, "K뱅크"),
                            (31, "대구은행"),
                            (90, "카카오뱅크"),
                        ],
                        default=0,
                    ),
                ),
                ("account_number", models.CharField(blank=True, max_length=45)),
                ("is_default", models.BooleanField(blank=True, default=True)),
                (
                    "address",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="profile",
                        to="addresses.address",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profiles",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-is_default", "-updated_at"],
            },
        ),
        migrations.CreateModel(
            name="Mandate",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("designator_signature", models.TextField(blank=True)),
                ("from_date", models.DateField(blank=True, null=True)),
                ("to_date", models.DateField(blank=True, null=True)),
                ("content", models.TextField()),
                (
                    "address",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="addresses.address"
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="author_mandates",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "designator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="designator_mandates",
                        to="profiles.profile",
                    ),
                ),
                (
                    "designee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="designee_mandates",
                        to="profiles.profile",
                    ),
                ),
            ],
            options={
                "ordering": ["-updated_at"],
            },
        ),
        migrations.CreateModel(
            name="Insurance",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("image", models.ImageField(upload_to=profiles.models.get_file_path)),
                ("from_date", models.DateField()),
                ("to_date", models.DateField()),
                (
                    "expert_profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="insurances",
                        to="profiles.expertprofile",
                    ),
                ),
            ],
            options={
                "ordering": ["-to_date"],
            },
        ),
        migrations.AddField(
            model_name="expertprofile",
            name="profile",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="expert_profile",
                to="profiles.profile",
            ),
        ),
        migrations.CreateModel(
            name="AllowedUser",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "allowed_users",
                    models.ManyToManyField(
                        blank=True, related_name="allowed_users", to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    "profile",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="allowed_user",
                        to="profiles.profile",
                    ),
                ),
            ],
        ),
    ]
