##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
proxy_cache_path   /home/ubuntu/web-info/cache/nginx levels=1:2 keys_zone=s3_cache:10m max_size=500m inactive=60m use_temp_path=off;
proxy_cache_path   /home/ubuntu/web-info/cache/nginx-green levels=1:2 keys_zone=s3_green_cache:10m max_size=500m inactive=60m use_temp_path=off;
proxy_cache_key "$scheme$request_method$host$request_uri";


upstream backend {
	server unix:/tmp/gunicorn.sock down;
	server unix:/tmp/gunicorn-green.sock;
}

upstream green {
	server unix:/tmp/gunicorn.sock down;
	server unix:/tmp/gunicorn-green.sock down;
	server 0.0.0.0:8000;

}

server {
	listen 80;
	listen [::]:80;
	server_name 3.35.255.254 dev.onepaper.biz;
        return 301 https://$host$request_uri;
}

server {
	listen 443 ssl; # managed by Certbot
	listen [::]:443 ssl; # managed by Certbot

	access_log  /var/log/nginx/access.log;
	error_log  /var/log/nginx/error.log;
	server_name 3.35.255.254 dev.onepaper.biz;
	client_max_body_size 5m;

# this is for the rest backend
	location /{
		proxy_pass http://backend;
		proxy_set_header host $host;
		proxy_set_header x-real-ip $remote_addr;
		proxy_set_header x-forwarded-for $proxy_add_x_forwarded_for;
		proxy_set_header x-forwarded-proto $scheme;

	}
	location /media/ {
		autoindex on;
		alias /home/ubuntu/web-info/media/;
		expires 365d;
	}
	location /static/ {
		proxy_cache            s3_green_cache;
		proxy_http_version     1.1;
		proxy_hide_header      x-amz-id-2;
		proxy_hide_header      x-amz-request-id;
		proxy_hide_header      x-amz-meta-server-side-encryption;
		proxy_hide_header      x-amz-server-side-encryption;
		proxy_hide_header      Set-Cookie;
		proxy_ignore_headers   Set-Cookie;
		proxy_cache_revalidate on;
		proxy_intercept_errors on;
		proxy_cache_use_stale  error timeout updating http_500 http_502 http_503 http_504;
		proxy_cache_lock       on;
		proxy_cache_valid      200 304 60m;
		add_header             Cache-Control max-age=31536000;
		add_header X-Proxy-Cache $upstream_cache_status;

		proxy_pass http://onepaper.s3.ap-northeast-2.amazonaws.com/static-green/;
		gzip on;
		gzip_disable "msie6";

		gzip_vary on;
		gzip_proxied any;
		gzip_comp_level 6;
		gzip_buffers 16 8k;
		gzip_http_version 1.1;
		gzip_min_length 256;
		gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype image/svg+xml image/x-icon;
	}

    ssl_certificate /etc/letsencrypt/live/dev.onepaper.biz/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/dev.onepaper.biz/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}
server {
	listen 5555;
	access_log  /var/log/nginx/access-green.log;
	error_log  /var/log/nginx/error-green.log;
#	server_name 3.35.255.254 dev.onepaper.biz;
	client_max_body_size 5m;

# this is for the rest backend
	location /{
		proxy_pass http://green;
		proxy_set_header host $host;
		proxy_set_header x-real-ip $remote_addr;
		proxy_set_header x-forwarded-for $proxy_add_x_forwarded_for;
		proxy_set_header x-forwarded-proto $scheme;
	}
	location /media/ {
		proxy_pass https://onepaper.s3.ap-northeast-2.amazonaws.com/media/;
		expires 365d;
	}
	location /static/ {
		proxy_cache            s3_cache;
		proxy_http_version     1.1;
		proxy_hide_header      x-amz-id-2;
		proxy_hide_header      x-amz-request-id;
		proxy_hide_header      x-amz-meta-server-side-encryption;
		proxy_hide_header      x-amz-server-side-encryption;
		proxy_hide_header      Set-Cookie;
		proxy_ignore_headers   Set-Cookie;
		proxy_cache_revalidate on;
		proxy_intercept_errors on;
		proxy_cache_use_stale  error timeout updating http_500 http_502 http_503 http_504;
		proxy_cache_lock       on;
		proxy_cache_valid      200 304 60m;
		add_header             Cache-Control max-age=31536000;
		add_header X-Proxy-Cache $upstream_cache_status;


		proxy_pass https://onepaper.s3.ap-northeast-2.amazonaws.com/static/;

		gzip on;
		gzip_disable "msie6";

		gzip_vary on;
		gzip_proxied any;
		gzip_comp_level 6;
		gzip_buffers 16 8k;
		gzip_http_version 1.1;
		gzip_min_length 256;
		gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype image/svg+xml image/x-icon;
	}
# ssl configuration
#
# listen 443 ssl default_server;
# listen [::]:443 ssl default_server;
#
# note: you should disable gzip for ssl traffic.
# see: https://bugs.debian.org/773332
#
# read up on ssl_ciphers to ensure a secure configuration.
# see: https://bugs.debian.org/765782
#
# self signed certs generated by the ssl-cert package
# don't use them in a production server!
#
# include snippets/snakeoil.conf;


# add index.php to the list if you are using php
# first attempt to serve request as file, then
# as directory, then fall back to displaying a 404.

# pass php scripts to fastcgi server
#
#location ~ \.php$ {
#	include snippets/fastcgi-php.conf;
#
#	# with php-fpm (or other unix sockets):
#	fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
#	# with php-cgi (or other tcp sockets):
#	fastcgi_pass 127.0.0.1:9000;
#}

# deny access to .htaccess files, if apache's document root
# concurs with nginx's one
#
#location ~ /\.ht {
#	deny all;
#}
}

# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}






